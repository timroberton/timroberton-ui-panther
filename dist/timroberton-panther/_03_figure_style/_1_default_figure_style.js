import { _POINT_STYLES, toPct1, } from "./deps";
const _DS = {
    scale: 1,
    stacked: "not-stacked",
    horizontal: false,
    withBars: true,
    withOutline: false,
    withDataLabels: true,
    padding: 0,
    baseText: {
        font: { key: "main400" },
        fontSize: 20,
        color: { key: "baseContent" },
        lineHeight: 1.2,
    },
    paletteColors: {
        logic: "auto-by-row",
        single: { key: "baseContent" },
        auto: {
            first: { key: "baseContent" },
            last: "purple",
        },
        specific: [],
        func: (() => ({ key: "baseContent" })),
    },
    palettePointStyles: {
        logic: "auto-by-row",
        single: "circle",
        auto: _POINT_STYLES,
        specific: [],
    },
    legendGap: 15,
    captionGap: 15,
    footnoteGap: 15,
    legendItemsSource: "default",
    legend: {
        legendPosition: "bottom-left",
        maxLegendItemsInOneColumn: 3,
        legendColorBoxWidth: 40,
        legendItemVerticalGap: 5,
        legendLabelGap: 10,
        legendPointRadius: 8,
        legendPointStrokeWidth: 3,
        legendPointInnerColorStrategy: {
            opacity: 0.3,
        },
        reverseOrder: false,
    },
    sankey: {
        labelBottomGap: 10,
        labelRightGap: 20,
        itemGap: 40,
        itemWidth: 230,
        // jutWidth: 100,
    },
    xTextAxis: {
        verticalTickLabels: false,
        maxVerticalTickLabelHeightAsPctOfChart: 0.3,
        showGrid: true,
        paddingLeft: 0,
        paddingRight: 0,
        labelGap: 10,
        tickHeight: 10,
        tickLabelGap: 10,
        tickLabelPaddingX: 20,
        colGroupGap: 0,
        colGroupLabelPaddingX: 20,
        colGroupBracketGapTop: 10,
        colGroupBracketGapBottom: 10,
        colGroupBracketPaddingX: 0,
        colGroupBracketTickHeight: 10,
    },
    xScaleAxis: {
        max: "auto",
        min: 0,
        showGrid: true,
        labelGap: 10,
        tickHeight: 10,
        tickLabelGap: 10,
        tickLabelFormatter: (v) => (v * 100).toFixed(0) + "%",
    },
    yTextAxis: {
        colHeight: 30,
        showGrid: true,
        paddingTop: 0,
        paddingBottom: 0,
        labelGap: 10,
        tickWidth: 10,
        tickLabelGap: 10,
        logicTickLabelWidth: "auto",
        logicColGroupLabelWidth: "auto",
        maxTickLabelWidthAsPctOfChart: 0.3,
        maxColGroupLabelWidthAsPctOfChart: 0.1,
        colGroupGap: 0,
        colGroupBracketGapLeft: 10,
        colGroupBracketGapRight: 10,
        colGroupBracketPaddingY: 0,
        colGroupBracketTickWidth: 10,
        verticalColGroupLabels: true,
    },
    yScaleAxis: {
        max: "auto",
        min: 0,
        showGrid: true,
        labelGap: 10,
        tickWidth: 10,
        tickLabelGap: 10,
        tickLabelFormatter: (v) => (v * 100).toFixed(0) + "%",
        forceTopOverhangHeight: "none",
    },
    multiChart: {
        logicContentHeights: "equal",
        subChartGapX: 20,
        subChartGapY: 20,
        nPerRow: 2,
        nSlotsToSkip: 0,
        subCaptionGap: 10,
    },
    axisStrokeWidth: 3,
    gridStrokeWidth: 1,
    colGroupBracketStrokeWidth: 1,
    axisColor: { key: "baseContent" },
    gridColor: { key: "base300" },
    colGroupBracketColor: { key: "baseContent" },
    backgroundColor: "none",
    //
    textAxisTickLabelFormatter: (v) => v,
    dataLabelFormatter: ((v) => (v * 100).toFixed(1) + "%"),
    dataLabelPositions: undefined,
    dataLabelGapYPoints: 2,
    dataLabelGapXPoints: 3,
    dataLabelGapYBars: 5,
    dataLabelGapXBars: 5,
    dataLabelOffsetXBars: 0,
    dataLabelPositionVerticalScale: "right",
    dataLabelPositionHorizontalScale: "top",
    dataLabelPositionTwoWayScale: "top",
    pctOfCol: 0.7,
    pctOfSeries: 0.9,
    barOpacity: 1,
    //
    //
    // Points
    pointRadius: 8,
    pointStrokeWidth: 3,
    pointInnerColorStrategy: {
        opacity: 0.3,
    },
    errorBarColorStrategy: {
        brighten: 2,
    },
    errorBarWidthProportionOfPoint: 1.5,
    errorBarWidthProportionOfBar: 0.66,
    // Cascade arrows
    arrowGap: 30,
    arrowLength: 20,
    arrowLabelGap: 10,
    arrowColor: "darkred",
    withArrows: false,
    arrowLabelFormatter: toPct1,
    cascadeArrows: {
        showArrows: false,
        arrowColor: { key: "baseContent" },
        arrowLabelFormatter: toPct1,
        arrowStrokeWidth: 3,
        arrowLengthPctOfSpace: 0.7,
        arrowHeadLength: 10,
        arrowLabelGap: 10,
        upperLabels: "none",
        upperLabelWidthPctOfCol: 0.9,
        upperLabelGapFromChartAreaY: 70,
    },
    // Outline
    outlineOpacity: 1,
    getOutlineOpacity: "none",
    outlineType: "straight",
    outlineRoundedRadius: 40,
    getOutlineWidth: "none",
};
export function getDefaultFigureStyle() {
    return _DS;
}
